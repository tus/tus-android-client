plugins {
    id('com.android.library')
    id('signing')
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def config = new ConfigSlurper().parse(new File("${projectDir}/src/main/res/tus-android-client-version/version.properties").toURI().toURL())
description=config.descritpion
version=config.version

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'io.tus.java.client:tus-java-client:0.4.5'
    testImplementation 'org.robolectric:robolectric:4.8.1'
    testImplementation 'junit:junit:4.13.2'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        owner.classpath += variant.javaCompileProvider.get().classpath
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

def pomConfig = {
    name 'tus-android-client'
    url 'http://tus.io'

    developers {
        developer {
            id 'acconut'
            name 'Marius Kleidl'
            email 'marius@transloadit.com'
        }
    }

    inceptionYear '2015'
    licenses {
        license {
            name 'The MIT License (MIT)'
            url 'http://opensource.org/licenses/MIT'
        }
    }

    scm {
        url 'https://github.com/tus/tus-android-client'
        connection 'https://github.com/tus/tus-android-client'
        developerConnection 'https://github.com/tus/tus-android-client'
    }
}

publishing {
    publications {
        androidRelease(MavenPublication) {
            afterEvaluate {
                from components.release
                groupId 'io.tus.android.client'
                artifactId 'tus-android-client'
                description project.getDescription()
                version project.getVersion()

                artifact sourcesJar
                artifact javadocJar

                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', project.getDescription())
                    root.children().last() + pomConfig
                }
            }
        }
    }
}

signing {
    def signingKeyId = System.getenv('SIGNING_KEY_ID')
    def signingPassword = System.getenv('SIGNING_KEY_PASSWORD')
    def signingKey = System.getenv('SIGNING_KEY_AMORED')
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.androidRelease
}
